@using Limbs.Web.Common.Extensions
@model  Limbs.Web.ViewModels.CovidEmbajadorEntregableViewModel

@{
    ViewBag.Title = "COVID-19";

    string headerTotal = Response.Headers.Get("X-TOTAL-PAGES");
    var totalPages = string.IsNullOrEmpty(headerTotal) ? 1 : Convert.ToInt32(headerTotal);

    string queryPage = HttpContext.Current.Request.QueryString["pag"];
    var actualPage = string.IsNullOrEmpty(queryPage) ? 1 : int.TryParse(queryPage, out int outValue) ? outValue : 1;
}

<style>
    .card.card-l > h2 {
        margin-bottom: .75em;
    }

    .form-cantidad {
        padding: .25em;
    }

    .f-campo.f-campo-cantidad {
        width: auto;
        text-align: center;
    }

    #panel_embajadores h1.covid-header {
        padding: 0;
    }

    .text-center {
        text-align: center;
    }
    
    /* GENERAL STYLES */
    
    .pagination {
        position: relative;
        display: inline-block;
        transform: translate(-50%, -50%);
        top: 50%;
        left: 50%;
        margin-top: 2em;
    }
    
    .pagination > li {
      display: inline;
    }
    
    .pagination > li > a,
    .pagination > li > span {
      position: relative;
      float: left;
      padding: 6px 12px;
      margin-left: -1px;
      line-height: 1.42857143;
      color: #4772B2;
      text-decoration: none;
      background-color: #ffffff;
      border: 1px solid #dddddd;
    }
    
    .pagination > li > a:hover,
    .pagination > li > span:hover,
    .pagination > li > a:focus,
    .pagination > li > span:focus {
      z-index: 2;
      color: #4772B2;
      background-color: #eeeeee;
      border-color: #dddddd;
    }
    
    .pagination > li:first-child > a,
    .pagination > li:first-child > span {
      margin-left: 0;
      border-top-left-radius: 4px;
      border-bottom-left-radius: 4px;
    }
    
    .pagination > li:last-child > a,
    .pagination > li:last-child > span {
      border-top-right-radius: 4px;
      border-bottom-right-radius: 4px;
    }
    
    .pagination > .active > a,
    .pagination > .active > span,
    .pagination > .active > a:hover,
    .pagination > .active > span:hover,
    .pagination > .active > a:focus,
    .pagination > .active > span:focus {
      z-index: 3;
      color: #ffffff;
      cursor: default;
      background-color: #4772B2;
      border-color: #4772B2;
    }
    
    .pagination > .disabled > span,
    .pagination > .disabled > span:hover,
    .pagination > .disabled > span:focus,
    .pagination > .disabled > a,
    .pagination > .disabled > a:hover,
    .pagination > .disabled > a:focus {
      color: #777777;
      cursor: not-allowed;
      background-color: #ffffff;
      border-color: #dddddd;
    }
</style>

<div id="loadingModal" style="display: none;">
    <div class="loader"></div>
</div>

<article id="panel_embajadores">
    <div id="Header" class="head_info">
        <h1 class="covid-header">Covid-19</h1>
    </div>
    <div id="paneles_embajador">
        <article class="card card-l">
            <h2>Cantidad de mascarillas a donar</h2>
            @using (Html.BeginForm("GuardarCantidad", "Ambassador", FormMethod.Post, new {@class = "form form-quantity"}))
            {
                @Html.HiddenFor(model => model.AmbassadorId)
                @Html.HiddenFor(model => model.Id)
                @Html.HiddenFor(model => model.TipoEntregable)

                <div class="f-seccion">
                    <label class="f-label">Cantidad Actual</label>
                    <div>
                        <button class="bn_blue removeCovidQuantity" type="button">
                            <i class="fa fa fa-minus"></i>
                        </button>
                        @Html.EditorFor(model => model.CantEntregable, new {htmlAttributes = new {@class = "f-campo f-campo-cantidad", @readonly = true}})
                        <button class="bn_blue addCovidQuantity" type="button">
                            <i class="fa fa fa-plus"></i>
                        </button>
                    </div>
                </div>

                <br/>
                <button class="bn_blue sendQuantity">Actualizar</button>
                <div>
                    <span class="quantityResponseMsg"></span>
                </div>
            }
        </article>
        <article class="card card-l">
            <p class="text-center">
                <img src=@Url.Content("~/Content/img/covidgif.gif") width="208">
            </p>
            <br/>
            <p>
                Hola Embajadores, por la situación actual que estamos pasando con el COVID-19, decidimos poner a disposición la plataforma Limbs para imprimir mascaras. Por favor, entra a este link: <a href="https://docs.google.com/document/d/1heHV7ln9IMKOava4vjm16t5udWLC7l42xcAc8hy6YdY" target="_blank"> MANUAL DE MASCARAS</a> para entender el funcionamiento de la plataforma.
            </p>
            <br/>
            <p>Cualquier duda escribinos en <a href="https://facebook.com/theatomiclab" target="_blank"> facebook.com/theatomiclab.</a> </p>
        </article>

    </div>
</article>

@if (Model.Orders.Count > 0)
{
    <h2 class="text-bold" style="margin: 0.75em .45em; ">Pedidos ordenados por cercanía</h2>
    <article id="info_pedido">
        <div class="grid_pedidos">
            @foreach (var order in Model.Orders)
            {
                if (order.OrderInfo != null)
                {
                    string featuredStr = order.OrderInfo.Featured ? "<strong>¡RETIRO SIN CARGO Y ENTREGA DE FILAMENTO PLA GRATIS!</strong> <a href='https://docs.google.com/document/d/14Yl0-Vf11PRqmna8KSdc-fSF7cbHaazyscUY0hw_9uw/' target='_blank'>Más info acá</a>" : string.Empty;
                    string featuredClass = order.OrderInfo.Featured ? "featured" : string.Empty;
                    <div class="card card-l @featuredClass">
                        <h2>Pedido #@order.OrgId</h2>
                        @using (Html.BeginForm("SaveQuantityToOrder", "Ambassador", FormMethod.Post))
                        {
                            <table class="tabla_datos">
                                <tr>
                                    <td>@order.OrderInfo.CovidOrganization.ToDescription() (a @order.OrderInfo.Distance.ToFriendlyDistanceString())</td>
                                    <td>
                                        @if (!string.IsNullOrEmpty(order.OrderInfo.CovidOrganizationName))
                                        {
                                            @order.OrderInfo.CovidOrganizationName
                                        }
                                    </td>
                                </tr>
                                <tr>
                                    <td>Cantidad necesaria</td>
                                    <td>@order.OrderInfo.Quantity</td>
                                </tr>
                                @if (order.OrderInfo.Ambassadors.Count > 0)
                                {
                                    <tr>
                                        <td>Embajadores que donaron: </td>
                                        <td>
                                            @foreach (var ambassador in order.OrderInfo.Ambassadors)
                                            {
                                                string fullTextName = $"{ambassador.Name} {ambassador.Lastname} x({ambassador.Quantity})";
                                                <p>@fullTextName</p>
                                            }
                                        </td>
                                    </tr>
                                }
                                <tr>
                                    <td colspan="2" class="text-bold">Sumarme</td>
                                </tr>
                                @if (order.OrderInfo.AlreadySavedQuantity)
                                {
                                    <tr>
                                        <td class="text-bold success" colspan="2">Te comprometiste con @order.OrderInfo.QuantitySaved unidades</td>
                                    </tr>
                                }
                                <tr>
                                    <td colspan="2">
                                        <table>
                                            <tr>
                                                <td colspan="2">
                                                    <button class="bn_blue removeCovidOrderQuantity" type="button">
                                                        <i class="fa fa fa-minus"></i>
                                                    </button>
                                                </td>
                                                <td colspan="2">
                                                    @{
                                                        var saveQt = order.OrderInfo.QuantitySaved ?? 0;
                                                        bool isEdit = order.OrderInfo.QuantitySaved != null;
                                                        var maxValue = Model.CantEntregable + saveQt;
                                                    }
                                                    <input class="f-campo f-campo-cantidad text-box single-line valid" data-val="true" data-val-number="The field CantEntregable must be a number." data-val-range=" " data-val-range-max="2147483647" data-val-range-min="0" data-val-required=" " name="SavedQuantity" readonly="True" type="number" value="@saveQt" aria-describedby="CantEntregable-error" aria-invalid="false">
                                                </td>
                                                <td colspan="2">
                                                    <button class="bn_blue addCovidOrderQuantity" data-max="@maxValue" type="button">
                                                        <i class="fa fa fa-plus"></i>
                                                    </button>
                                                </td>
                                                <td colspan="2">
                                                    <button class="bn_blue saveQuantityOrder" data-isFeatured="@order.OrderInfo.Featured" data-isEdit="@isEdit">Guardar</button>
                                                </td>
                                            </tr>
                                        </table>
                                    </td>
                                </tr>
                                @if (!string.IsNullOrEmpty(featuredStr))
                                {
                                    <tr>
                                        <td colspan="2">@Html.Raw(featuredStr)</td>
                                    </tr>
                                }
                            </table>

                            <input type="hidden" name="OrgId" value="@order.OrgId"/>
                            <input type="hidden" name="CovidAmbassadorId" value="@Model.Id"/>
                        }
                    </div>
                }
            }
        </div>
        <div class="pag-container">
            <ul id="pagination-demo" data-totalPages="@totalPages" data-actualPage="@actualPage" class="pagination"></ul>
        </div>
    </article>
}
else
{
    <h2 class="text-bold">Aún no hay pedidos</h2>
}

@section scripts
{
    <script src="https://unpkg.com/masonry-layout@4/dist/masonry.pkgd.min.js"></script>
    <script src="https://unpkg.com/imagesloaded@4/imagesloaded.pkgd.min.js"></script>
    <script src="~/Scripts/jquery.twbsPagination.min.js"></script>
    <script src="~/Scripts/pages/ambassador_covid.js"></script>
}