@using Microsoft.AspNet.Identity
@model Limbs.Web.Models.AmbassadorModel

@{
    ViewBag.Title = "Nuevo Embajador";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <div class="form-title-row">
            <h1>¡Registrate a la plataforma Limbs como Embajador!</h1>
        </div>

        <div class="header_registro">
            Datos Personales
        </div><hr color="#f2f2f2">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-row">
            @Html.LabelFor(model => model.AmbassadorName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AmbassadorName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AmbassadorName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-row">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-row">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBox("displayemail", Model.Email, htmlAttributes: new { @class = "form-control", disabled = "disabled" })
                @Html.HiddenFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-row">
            @Html.LabelFor(model => model.Birth, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Birth, new { htmlAttributes = new { @class = "form-control datefield" } })
                @Html.ValidationMessageFor(model => model.Birth, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-row">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.Gender, "- Sexo -", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-row">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-row">
            @Html.LabelFor(model => model.Dni, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Dni, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Dni, "", new { @class = "text-danger" })
            </div>
        </div>
        @*
            --Leave comments for possible evolution-#idEvolution = 1#-----##

             <div class="form-row">
                 @Html.LabelFor(model => model.AtributoEmbajador1, htmlAttributes: new { @class = "control-label col-md-2" })
                 <div class="col-md-10">
                     @Html.EditorFor(model => model.AtributoEmbajador1, new { htmlAttributes = new { @class = "form-control" } })
                     @Html.ValidationMessageFor(model => model.AtributoEmbajador1, "", new { @class = "text-danger" })
                 </div>
             </div>

             <div class="form-row">
                 @Html.LabelFor(model => model.AtributoEmbajador2, htmlAttributes: new { @class = "control-label col-md-2" })
                 <div class="col-md-10">
                     @Html.EditorFor(model => model.AtributoEmbajador2, new { htmlAttributes = new { @class = "form-control" } })
                     @Html.ValidationMessageFor(model => model.AtributoEmbajador2, "", new { @class = "text-danger" })
                 </div>
             </div>

             <div class="form-row">
                 @Html.LabelFor(model => model.AtributoEmbajador3, htmlAttributes: new { @class = "control-label col-md-2" })
                 <div class="col-md-10">
                     @Html.EditorFor(model => model.AtributoEmbajador3, new { htmlAttributes = new { @class = "form-control" } })
                     @Html.ValidationMessageFor(model => model.AtributoEmbajador3, "", new { @class = "text-danger" })
                 </div>
             </div>
        *@

        <div class="form-row">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
            $(document).ready(function () {
                $(".datefield").datepicker({ format: 'dd-mm-yyyy', changeMonth: true, changeYear: true, yearRange: "@DateTime.Now.AddYears(-100).Year:@DateTime.Now.Year", maxDate: "0D" });
            });
    </script>
}
