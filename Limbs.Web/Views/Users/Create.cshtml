@using Limbs.Web.Resources
@using System.Configuration
@using Limbs.Web.Common.Extensions
@model Limbs.Web.Entities.Models.UserModel
@{
    var isEdit = Model != null && Model?.Id != 0;

    bool isAdultCheck = ViewBag.IsAdultCheck != null && (bool)ViewBag.IsAdultCheck;
    bool termsAndConditions = ViewBag.TermsAndConditions != null && (bool)ViewBag.TermsAndConditions;

    ViewBag.Title = isEdit ? UsersTexts.Create_ViewBag_Title_Edit : UsersTexts.Create_ViewBag_Title_Register;
}
@if (!isEdit)
{
    @Facebook.DisplayFacebookChat()
}

@section scripts
{
    <script src="~/Scripts/pages/users.js"></script>
    @if (!isEdit)
    {
        <script src="~/Scripts/register.js"></script>
    }
    @if (Model != null && Model.IsProductUser)
    {
        <script type="text/javascript">
            $(document).ready(function() {
                $("select[name='@Html.NameFor(x => x.IsProductUser)'").val("true");
                isProductUser("true");
            });
        </script>
    }
}

@section styles
{
    <style>
        .cont-wr {
            max-width: initial;
            padding: 0px;
        }

        .min-full {
            background-color: white;
        }
    </style>
}

<div id="cont" class="min_full">

    <div id="registro">
        @using (Html.BeginForm("Create", "Users", FormMethod.Post, new { @class = "form" }))
        {
            @Html.HiddenFor(x => x.Id)
            @Html.HiddenFor(x => x.Email)
            @Html.HiddenFor(x => x.UserId)
            @Html.AntiForgeryToken()
            <h2 class="f-titulo first">@UsersTexts.Create_h2_1</h2>
            if (!ViewData.ModelState.IsValid)
            {
                @Html.ValidationSummary(UsersTexts.Create_ValidationSummary, new { @class = "" })
            }
            <div class="f-seccion">
                <h3>@UsersTexts.Create_h3</h3>
                <select class="f-drop bn_blue" style="color: black;" name="@Html.NameFor(model => model.IsProductUser)">
                    <option value="false">@UsersTexts.Create_drop_op1</option>
                    <option value="true">@UsersTexts.Create_drop_op2</option>
                </select>
                <br />
                <label for="isAdultCheck" id="isAdultCheckContainer">
                    @Html.CheckBox("isAdultCheck", isAdultCheck, new { id = "isAdultCheck" })
                    @UsersTexts.Create_isAdultCheck
                </label><br>
                <div class="f-campo-mitad">
                    @Html.EditorFor(model => model.ResponsableName, new { htmlAttributes = new { @class = "f-campo", placeholder = UsersTexts.Create_ResponsableName } })
                    @Html.EditorFor(model => model.ResponsableLastName, new { htmlAttributes = new { @class = "f-campo", placeholder = UsersTexts.Create_ResponsableLastName } })
                </div>
                <div id="ResponsableDni">
                    @Html.EditorFor(model => model.ResponsableDni, new { htmlAttributes = new { @class = "f-campo", placeholder = UsersTexts.Create_ResponsableDni } })
                    <label class="f-label" style="font-style: italic; font-size: 11px;">
                     @UsersTexts.Create_ResponsableDni_Label   
                    </label>
                </div>
            </div>
            <h2 class="f-titulo" name="titleDateUser">@UsersTexts.Create_h2_2</h2>
            <div class="f-seccion">
                <div class="f-campo-mitad">
                    @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "f-campo", placeholder = UsersTexts.Create_UserName } })
                    @Html.EditorFor(model => model.UserLastName, new { htmlAttributes = new { @class = "f-campo", placeholder = UsersTexts.Create_UserLastName } })
                </div>
                @Html.EditorFor(model => model.Dni, new { htmlAttributes = new { @class = "f-campo", placeholder = UsersTexts.Create_UserDni } })
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "f-campo", placeholder = UsersTexts.Create_UserPhone } })
                <label class="f-label">@UsersTexts.Create_UserBirth</label>
                @Html.EditorFor(model => model.Birth, new { htmlAttributes = new { @class = "f-campo", type = "text", placeholder = DateTime.UtcNow.AddYears(-18).ToString("yyyy-MM-dd") } })
                <label class="f-label">@UsersTexts.Create_UserGender</label>
                @Html.EditorFor(m => m.Gender, new { htmlAttributes = new { @class = "f-campo f-post-l" } })
                <label class="f-label">@UsersTexts.Create_AlternativeEmail</label>
                <label class="f-label" style="font-style: italic; font-size: 12px;">@UsersTexts.Create_AlternativeEmail_Label</label>
                @Html.EditorFor(model => model.AlternativeEmail, new { htmlAttributes = new { @class = "f-campo", placeholder = @UsersTexts.Create_AlternativeEmail } })

                @Html.Partial("_Address", Model)
            </div>
            <div>
                @if (!isEdit)
                {
                    <p style="margin: 20px;">
                        <label for="termsAndConditions">
                            @Html.CheckBox("termsAndConditions", termsAndConditions, new { id = "termsAndConditions" })
                            @UsersTexts.Create_termsAndConditions @Html.ActionLink(UsersTexts.Create_TermsAndConditionsActionLink, "TermsAndConditions", null, new { target = "_blank" }).
                        </label>
                    </p>
                }
                <p>
                    <button type="submit" id="btn-register" class="bn_blue" name="register">@(isEdit ? UsersTexts.Create_RegisterButton_Edit : UsersTexts.Create_RegisterButton_Register)</button>
                </p>
            </div>
        }
    </div>
</div>