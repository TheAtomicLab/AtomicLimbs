@using System.Configuration
@using Limbs.Web.Common.Extensions
@model Limbs.Web.Entities.Models.UserModel
@{
    var isEdit = Model != null && Model?.Id != 0;

    bool isAdultCheck = ViewBag.IsAdultCheck != null && (bool)ViewBag.IsAdultCheck;
    bool termsAndConditions = ViewBag.TermsAndConditions != null && (bool)ViewBag.TermsAndConditions;

    ViewBag.Title = isEdit ? "Editar datos" : "Registro";
}
@if (!isEdit)
{
    @Facebook.DisplayFacebookChat()
}

@section scripts
{
    <script src="~/Scripts/pages/users.js"></script>
    @if (!isEdit)
    {
        <script src="~/Scripts/register.js"></script>
    }
    @if (Model != null && Model.IsProductUser)
    {
        <script type="text/javascript">
            $(document).ready(function() {
                $("select[name='@Html.NameFor(x => x.IsProductUser)'").val("true");
                isProductUser("true");
            });
        </script>
    }
}

@section styles
{
    <style>
        .cont-wr {
            max-width: initial;
            padding: 0px;
        }

        .min-full {
            background-color: white;
        }
    </style>
}

<div id="cont" class="min_full">

    <div id="registro">
        @using (Html.BeginForm("Create", "Users", FormMethod.Post, new { @class = "form" }))
        {
            @Html.HiddenFor(x => x.Id)
            @Html.HiddenFor(x => x.Email)
            @Html.HiddenFor(x => x.UserId)
            @Html.AntiForgeryToken()
            <h2 class="f-titulo">Tus datos</h2>
            <div class="f-seccion">
                <h3>¿Sos el usuario de la mano?</h3>
                <select class="f-drop bn_blue" style="color: black;" name="@Html.NameFor(model => model.IsProductUser)">
                    <option value="false">NO</option>
                    <option value="true">SI</option>
                </select>
                <br />
                <label for="isAdultCheck" id="isAdultCheckContainer">
                    @Html.CheckBox("isAdultCheck", isAdultCheck, new { id = "isAdultCheck" })
                    ¿Declara que es mayor de 18 años?
                </label><br>
                <div class="f-campo-mitad">
                    @Html.EditorFor(model => model.ResponsableName, new { htmlAttributes = new { @class = "f-campo", placeholder = "Nombre" } })
                    @Html.EditorFor(model => model.ResponsableLastName, new { htmlAttributes = new { @class = "f-campo", placeholder = "Apellido" } })
                </div>
                <div id="ResponsableDni">
                    @Html.EditorFor(model => model.ResponsableDni, new { htmlAttributes = new { @class = "f-campo", placeholder = "Número de Documento de Identidad / Pasaporte" } })
                    <label class="f-label" style="font-style: italic; font-size: 11px;">
                        Ingresar el número completo. Según el país, puede ser también conocido como: Cédula de Identidad (CI), Cédula de Ciudadanía (CC), Tarjeta de Identidad (TI), Registro Civil (RC), Cédula de Extranjería (CE), Carné de Identidad (CI), Documento Nacional de Identidad (DNI), Documento Único de Identidad (DUI), identificación oficial o identificación (ID), Clave Única de Registro de Población (CURP), etc.
                    </label>
                </div>
            </div>
            <h2 class="f-titulo" name="titleDateUser">Datos del usuario de la mano</h2>
            <div class="f-seccion">
                <div class="f-campo-mitad">
                    @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "f-campo", placeholder = "Nombre" } })
                    @Html.EditorFor(model => model.UserLastName, new { htmlAttributes = new { @class = "f-campo", placeholder = "Apellido" } })
                </div>
                @Html.EditorFor(model => model.Dni, new { htmlAttributes = new { @class = "f-campo", placeholder = "DNI o Pasaporte" } })
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "f-campo", placeholder = "Teléfono" } })
                <label class="f-label">Fecha de nacimiento</label>
                @Html.EditorFor(model => model.Birth, new { htmlAttributes = new { @class = "f-campo", type = "text", placeholder = DateTime.UtcNow.AddYears(-18).ToString("yyyy-MM-dd") } })
                <label class="f-label">Sexo</label>
                @Html.EditorFor(m => m.Gender, new { htmlAttributes = new { @class = "f-campo f-post-l" } })
                <label class="f-label">Email Alternativo</label>
                <label class="f-label" style="font-style: italic; font-size: 12px;">Todo nuestro contacto será vía mail, si hay otro mail que uses escribilo acá para mantenerte informado </label>
                @Html.EditorFor(model => model.AlternativeEmail, new { htmlAttributes = new { @class = "f-campo", placeholder = "Email Alternativo" } })

                @Html.Partial("_Address", Model)
            </div>
            <div>
                @if (!isEdit)
                {
                    <p style="margin: 20px;">
                        <label for="termsAndConditions">
                            @Html.CheckBox("termsAndConditions", termsAndConditions, new { id = "termsAndConditions" })
                            acepto los @Html.ActionLink("términos y condiciones", "TermsAndConditions", null, new { target = "_blank" }).
                        </label>
                    </p>
                }
                <p>
                    @Html.ValidationSummary("", new { @class = "text-danger" })
                    <button type="submit" class="bn_blue" name="register" onclick="this.form.submit(); this.disabled=true;">@(isEdit ? "Editar datos" : "Registrarse")</button>
                </p>
            </div>
        }
    </div>
</div>