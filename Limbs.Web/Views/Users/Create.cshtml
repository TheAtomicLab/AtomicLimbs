@using Microsoft.AspNet.Identity
@model Limbs.Web.Models.UserModel
@{
    bool isAdultCheck = ViewBag.IsAdultCheck != null && (bool) ViewBag.IsAdultCheck;
    bool selectUser = ViewBag.SelectUser != null && (bool) ViewBag.SelectUser;
}
@section scripts
{
    <script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCj_qLzys5aRCbeG-DREBx7n4ZlKccHd4Y&callback=initMap">
    </script>
    <script src="~/Scripts/geo.js"></script>
    <script src="~/Scripts/pages/users.js"></script>
    <script src="~/Scripts/register.js"></script>
    <script type="text/javascript">
        $("form.form").submit(function() {
            if ($("#termsandconditions").is(":checked")) {
                return true;
            }
            alert("Debe aceptar los términos y condiciones.");
            return false;
        });
    </script>
    @if (selectUser)
    {
        <script type="text/javascript">
            $(document).ready(function() {
                $("select[name='selectUser'").val("true");
                selectUser("true");
            });
        </script>
    }
}

<div id="cont" class="min_full">

    <div id="registro">
        @using (Html.BeginForm("Create", "Users",
                     FormMethod.Post, new { @class = "form" }))
        {
            @Html.AntiForgeryToken()
            <h2 class="f-titulo">Tus datos</h2>
            <div class="f-seccion">
                <div class="f-campo-mitad">
                    @Html.EditorFor(model => model.ResponsableName, new { htmlAttributes = new { @class = "f-campo", placeholder = "Nombre" } })
                    @Html.ValidationMessageFor(x => x.ResponsableName)
                    @Html.EditorFor(model => model.ResponsableLastName, new { htmlAttributes = new { @class = "f-campo", placeholder = "Apellido" } })
                    @Html.ValidationMessageFor(x => x.ResponsableLastName)
                </div>
                <h3>¿Sos el usuario de la mano?</h3>
                <select class="f-drop blue_button" name="selectUser">
                    <option value="false">NO</option>
                    <option value="true">SI</option>
                </select>
                <br />
                <label for="isAdultCheck" id="isAdultCheckContainer">
                    @Html.CheckBox("isAdultCheck", isAdultCheck, new { id = "isAdultCheck" })
                    ¿Declara que es mayor de 18 años?
                </label><br>
            </div>
            <h2 class="f-titulo" name="titleDateUser">Datos del usuario de la mano</h2>
            <div class="f-seccion">
                <div class="f-campo-mitad">
                    @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "f-campo", placeholder = "Nombre" } })
                    @Html.ValidationMessageFor(x => x.UserName)
                    @Html.EditorFor(model => model.UserLastName, new { htmlAttributes = new { @class = "f-campo", placeholder = "Apellido" } })
                    @Html.ValidationMessageFor(x => x.UserLastName)
                </div>
                @Html.EditorFor(model => model.Dni, new { htmlAttributes = new { @class = "f-campo", placeholder = "DNI o Pasaporte" } })
                @Html.ValidationMessageFor(x => x.Dni)
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "f-campo", placeholder = "Teléfono" } })
                @Html.ValidationMessageFor(x => x.Phone)
                <label class="f-label">Fecha de nacimiento</label>
                @Html.EditorFor(model => model.Birth, new { htmlAttributes = new { @class = "f-campo", type = "text", placeholder = "2017-05-11" } })
                <label class="f-label">Sexo</label>
                @Html.DropDownListFor(m => m.Gender, Limbs.Web.Models.AmbassadorModel.GetGenderSelect(), new { @class = "f-campo f-post-l" })
                <div class="f-campo-mitad">
                    @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "f-campo", placeholder = "País" } })
                    @Html.ValidationMessageFor(x => x.Country)
                    @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "f-campo", placeholder = "Ciudad" } })
                    @Html.ValidationMessageFor(x => x.City)
                </div>
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "f-campo", placeholder = "Dirección" } })
                @Html.ValidationMessageFor(x => x.Address)
                <div id="map"></div>
            </div>
            <div>
                <p><button class="blue_button" style="margin-top: 10px;" id="checkAddress">Ver dirección</button></p>
                <p>
                    <label for="termsandconditions">
                        <input type="checkbox" id="termsandconditions"/> acepto los @Html.ActionLink("términos y condiciones", "TermsAndConditions", null, new { target = "_blank" }).
                    </label>
                </p>
                <p><button type="submit" class="blue_button" name="register">Registrarse</button></p>
            </div>
        }
    </div>

</div>