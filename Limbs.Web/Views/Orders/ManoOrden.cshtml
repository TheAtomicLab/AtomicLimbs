@using Limbs.Web.Entities.Models;
@using Limbs.Web.ViewModels;
@using Limbs.Web.Resources


@model NewOrder

@{
    ViewBag.Title = OrdersTexts.ManoOrden_ViewBag_Title;
}

@section scripts
{
    <style>
        textarea {
            width: 400px;
            height: 100px;
        }
    </style>
}

<div class="card center-card-l">
    @using (Html.BeginForm("Create", "Orders"))
    {
        @Html.AntiForgeryToken()

        @Html.HiddenFor(model => model.AmputationTypeFkId)
        @Html.HiddenFor(model => model.ProductType)
        @Html.HiddenFor(model => model.IdImage)
        @Html.HiddenFor(model => model.HasDesign)

        <div class="form-horizontal">
            @if (Model.HasDesign)
            {
                <div class="">
                    <p class="form_title">@OrdersTexts.ManoOrden_Color</p>
                    <div class="sel_color_container">
                        @{
                            var colors = ViewData["renderColors"] == null ? new List<ColorModel>() : ViewData["renderColors"] as List<ColorModel>;

                            foreach (var color in colors)
                            {
                                <div class="sel_color_mano" onclick="select_color(this)" style="background-image: url(@color.PrimaryUrlImage);background-size: contain; background-repeat: no-repeat;" js_value="@color.Name">@Html.RadioButtonFor(model => model.ColorFkId, color.Id, new { @class = "selector_color_input" })</div>
                            }
                        }
                    </div>
                </div>
                <script>
                    function select_color(obj) {
                        var $obj = $(obj);
                        $('.sel_color_mano').removeClass('color_selected');
                        $obj.addClass('color_selected');
                        var radio = $obj.find('input')[0];
                        $(radio).prop('checked', true);
                    }
                    $('.sel_color_mano input[checked]').closest('.sel_color_mano').addClass('color_selected');
                </script>
            }

            <div class="form-group">
                <p class="form_title">@Html.LabelFor(model => model.Comments, htmlAttributes: new { @class = "control-label" })</p>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Comments, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="@OrdersTexts.ManoOrden_SubmitButton" class="bn_blue atomForm-send" onclick="this.form.submit(); this.disabled=true;" />
                </div>
            </div>
        </div>
    }
</div>